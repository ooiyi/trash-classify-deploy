{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyiooi/Documents/react_projects/trash-classification/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Classification from \"./components/Classification\";\nimport History from \"./components/History\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userName, setUserName] = useState(\"User\");\n  const [currentSection, setCurrentSection] = useState(\"classification\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [uploadName, setUploadName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [totalCounts, setTotalCounts] = useState({\n    plastic: 0,\n    metal: 0,\n    glass: 0\n  });\n  const [filteredHistory, setFilteredHistory] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const [uniqueNames, setUniqueNames] = useState([]);\n  const [uniqueDates, setUniqueDates] = useState([]);\n\n  // Dummy handlers to avoid undefined error\n  const getRootProps = () => ({});\n  const getInputProps = () => ({});\n  const handleUpload = () => {\n    alert(\"Upload handler triggered\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      userName: userName,\n      setCurrentSection: setCurrentSection,\n      menuOpen: menuOpen,\n      setMenuOpen: setMenuOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), currentSection === \"classification\" ? /*#__PURE__*/_jsxDEV(Classification, {\n      files: files,\n      getRootProps: getRootProps,\n      getInputProps: getInputProps,\n      uploadName: uploadName,\n      setUploadName: setUploadName,\n      handleUpload: handleUpload,\n      loading: loading,\n      results: results,\n      totalCounts: totalCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(History, {\n      filteredHistory: filteredHistory,\n      filterName: filterName,\n      setFilterName: setFilterName,\n      filterDate: filterDate,\n      setFilterDate: setFilterDate,\n      uniqueNames: uniqueNames,\n      uniqueDates: uniqueDates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"3p5yGeCqgjfsVzh3acJ3Fzb7Pv8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Classification","History","jsxDEV","_jsxDEV","App","_s","userName","setUserName","currentSection","setCurrentSection","menuOpen","setMenuOpen","files","setFiles","uploadName","setUploadName","loading","setLoading","results","setResults","totalCounts","setTotalCounts","plastic","metal","glass","filteredHistory","setFilteredHistory","filterName","setFilterName","filterDate","setFilterDate","uniqueNames","setUniqueNames","uniqueDates","setUniqueDates","getRootProps","getInputProps","handleUpload","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhiyiooi/Documents/react_projects/trash-classification/frontend/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Classification from \"./components/Classification\";\nimport History from \"./components/History\";\n\nconst App = () => {\n  const [userName, setUserName] = useState(\"User\");\n  const [currentSection, setCurrentSection] = useState(\"classification\");\n  const [menuOpen, setMenuOpen] = useState(false);\n\n  const [files, setFiles] = useState([]);\n  const [uploadName, setUploadName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [results, setResults] = useState(null);\n  const [totalCounts, setTotalCounts] = useState({ plastic: 0, metal: 0, glass: 0 });\n\n  const [filteredHistory, setFilteredHistory] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const [uniqueNames, setUniqueNames] = useState([]);\n  const [uniqueDates, setUniqueDates] = useState([]);\n\n  // Dummy handlers to avoid undefined error\n  const getRootProps = () => ({});\n  const getInputProps = () => ({});\n  const handleUpload = () => {\n    alert(\"Upload handler triggered\");\n  };\n\n  return (\n    <div className=\"App\">\n      <Navbar\n        userName={userName}\n        setCurrentSection={setCurrentSection}\n        menuOpen={menuOpen}\n        setMenuOpen={setMenuOpen}\n      />\n      {currentSection === \"classification\" ? (\n        <Classification\n          files={files}\n          getRootProps={getRootProps}\n          getInputProps={getInputProps}\n          uploadName={uploadName}\n          setUploadName={setUploadName}\n          handleUpload={handleUpload}\n          loading={loading}\n          results={results}\n          totalCounts={totalCounts}\n        />\n      ) : (\n        <History\n          filteredHistory={filteredHistory}\n          filterName={filterName}\n          setFilterName={setFilterName}\n          filterDate={filterDate}\n          setFilterDate={setFilterDate}\n          uniqueNames={uniqueNames}\n          uniqueDates={uniqueDates}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}