{"ast":null,"code":"var _jsxFileName = \"/Users/zhiyiooi/Documents/react_projects/trash-classify-deploy/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport Classification from \"./components/Classification\";\nimport History from \"./components/History\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [sessionStarted, setSessionStarted] = useState(false);\n  const [currentSection, setCurrentSection] = useState(\"classification\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [uploadName, setUploadName] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [totalCounts, setTotalCounts] = useState({\n    plastic: 0,\n    metal: 0,\n    glass: 0\n  });\n  const [history, setHistory] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterDate, setFilterDate] = useState(\"\");\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: \"image/*, video/*\",\n    multiple: true,\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles);\n      setResults(null);\n      setTotalCounts({\n        plastic: 0,\n        metal: 0,\n        glass: 0\n      });\n    }\n  });\n  const handleUpload = async () => {\n    if (!uploadName.trim()) {\n      alert(\"Please enter a name for this upload.\");\n      return;\n    }\n    if (files.length === 0) {\n      alert(\"Please upload images or videos.\");\n      return;\n    }\n    setLoading(true);\n    const formData = new FormData();\n    files.forEach(file => formData.append(\"files\", file));\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.status === 200) {\n        const detections = response.data;\n        setResults(detections);\n        let totalPlastic = 0,\n          totalMetal = 0,\n          totalGlass = 0;\n        detections.forEach(d => {\n          if (d.type === \"Plastic\") totalPlastic++;\n          if (d.type === \"Metal\") totalMetal++;\n          if (d.type === \"Glass\") totalGlass++;\n        });\n        setTotalCounts({\n          plastic: totalPlastic,\n          metal: totalMetal,\n          glass: totalGlass\n        });\n        const newEntry = {\n          name: uploadName.trim(),\n          date: new Date().toLocaleDateString(),\n          data: detections,\n          files\n        };\n        setHistory(prev => [...prev, newEntry]);\n        setUploadName(\"\");\n        setFiles([]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error processing files.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const filteredHistory = history.filter(entry => (!filterName || entry.name === filterName) && (!filterDate || entry.date === filterDate));\n  const uniqueNames = [...new Set(history.map(h => h.name))];\n  const uniqueDates = [...new Set(history.map(h => h.date))];\n  const renderWelcomeScreen = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"welcome-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome to Trash Classification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter your name or session\",\n      value: userName,\n      onChange: e => setUserName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"start-button\",\n      disabled: !userName.trim(),\n      onClick: () => setSessionStarted(true),\n      children: \"Get Started\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !sessionStarted ? renderWelcomeScreen() : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        userName: userName,\n        menuOpen: menuOpen,\n        setMenuOpen: setMenuOpen,\n        setCurrentSection: setCurrentSection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), currentSection === \"classification\" ? /*#__PURE__*/_jsxDEV(Classification, {\n        files: files,\n        getRootProps: getRootProps,\n        getInputProps: getInputProps,\n        uploadName: uploadName,\n        setUploadName: setUploadName,\n        handleUpload: handleUpload,\n        loading: loading,\n        results: results,\n        totalCounts: totalCounts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(History, {\n        history: filteredHistory,\n        filterName: filterName,\n        setFilterName: setFilterName,\n        filterDate: filterDate,\n        setFilterDate: setFilterDate,\n        uniqueNames: uniqueNames,\n        uniqueDates: uniqueDates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XyFNFZFCmCvPweK2QiHemsmRxfI=\", false, function () {\n  return [useDropzone];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useDropzone","axios","Navbar","Classification","History","jsxDEV","_jsxDEV","App","_s","userName","setUserName","sessionStarted","setSessionStarted","currentSection","setCurrentSection","menuOpen","setMenuOpen","files","setFiles","uploadName","setUploadName","results","setResults","loading","setLoading","totalCounts","setTotalCounts","plastic","metal","glass","history","setHistory","filterName","setFilterName","filterDate","setFilterDate","getRootProps","getInputProps","accept","multiple","onDrop","acceptedFiles","handleUpload","trim","alert","length","formData","FormData","forEach","file","append","response","post","headers","status","detections","data","totalPlastic","totalMetal","totalGlass","d","type","newEntry","name","date","Date","toLocaleDateString","prev","error","console","filteredHistory","filter","entry","uniqueNames","Set","map","h","uniqueDates","renderWelcomeScreen","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/zhiyiooi/Documents/react_projects/trash-classify-deploy/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport axios from \"axios\";\nimport Navbar from \"./components/Navbar\";\nimport Classification from \"./components/Classification\";\nimport History from \"./components/History\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [sessionStarted, setSessionStarted] = useState(false);\n  const [currentSection, setCurrentSection] = useState(\"classification\");\n  const [menuOpen, setMenuOpen] = useState(false);\n  const [files, setFiles] = useState([]);\n  const [uploadName, setUploadName] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [totalCounts, setTotalCounts] = useState({ plastic: 0, metal: 0, glass: 0 });\n  const [history, setHistory] = useState([]);\n  const [filterName, setFilterName] = useState(\"\");\n  const [filterDate, setFilterDate] = useState(\"\");\n\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*, video/*\",\n    multiple: true,\n    onDrop: (acceptedFiles) => {\n      setFiles(acceptedFiles);\n      setResults(null);\n      setTotalCounts({ plastic: 0, metal: 0, glass: 0 });\n    },\n  });\n\n  const handleUpload = async () => {\n    if (!uploadName.trim()) {\n      alert(\"Please enter a name for this upload.\");\n      return;\n    }\n\n    if (files.length === 0) {\n      alert(\"Please upload images or videos.\");\n      return;\n    }\n\n    setLoading(true);\n    const formData = new FormData();\n    files.forEach((file) => formData.append(\"files\", file));\n\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/predict\", formData, {\n        headers: { \"Content-Type\": \"multipart/form-data\" },\n      });\n\n      if (response.status === 200) {\n        const detections = response.data;\n        setResults(detections);\n\n        let totalPlastic = 0, totalMetal = 0, totalGlass = 0;\n        detections.forEach(d => {\n          if (d.type === \"Plastic\") totalPlastic++;\n          if (d.type === \"Metal\") totalMetal++;\n          if (d.type === \"Glass\") totalGlass++;\n        });\n\n        setTotalCounts({ plastic: totalPlastic, metal: totalMetal, glass: totalGlass });\n\n        const newEntry = {\n          name: uploadName.trim(),\n          date: new Date().toLocaleDateString(),\n          data: detections,\n          files,\n        };\n\n        setHistory(prev => [...prev, newEntry]);\n        setUploadName(\"\");\n        setFiles([]);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Error processing files.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const filteredHistory = history.filter(entry => (\n    (!filterName || entry.name === filterName) &&\n    (!filterDate || entry.date === filterDate)\n  ));\n\n  const uniqueNames = [...new Set(history.map(h => h.name))];\n  const uniqueDates = [...new Set(history.map(h => h.date))];\n\n  const renderWelcomeScreen = () => (\n    <div className=\"welcome-screen\">\n      <h1>Welcome to Trash Classification</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter your name or session\"\n        value={userName}\n        onChange={(e) => setUserName(e.target.value)}\n      />\n      <button\n        className=\"start-button\"\n        disabled={!userName.trim()}\n        onClick={() => setSessionStarted(true)}\n      >\n        Get Started\n      </button>\n    </div>\n  );\n\n  return (\n    <div className=\"App\">\n      {!sessionStarted ? (\n        renderWelcomeScreen()\n      ) : (\n        <div className=\"App-header\">\n          <Navbar\n            userName={userName}\n            menuOpen={menuOpen}\n            setMenuOpen={setMenuOpen}\n            setCurrentSection={setCurrentSection}\n          />\n\n          {currentSection === \"classification\" ? (\n            <Classification\n              files={files}\n              getRootProps={getRootProps}\n              getInputProps={getInputProps}\n              uploadName={uploadName}\n              setUploadName={setUploadName}\n              handleUpload={handleUpload}\n              loading={loading}\n              results={results}\n              totalCounts={totalCounts}\n            />\n          ) : (\n            <History\n              history={filteredHistory}\n              filterName={filterName}\n              setFilterName={setFilterName}\n              filterDate={filterDate}\n              setFilterDate={setFilterDate}\n              uniqueNames={uniqueNames}\n              uniqueDates={uniqueDates}\n            />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}